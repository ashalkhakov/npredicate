//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from NSPredicate.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="NSPredicateParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public interface INSPredicateListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>PredicateNot</c>
	/// labeled alternative in <see cref="NSPredicateParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicateNot([NotNull] NSPredicateParser.PredicateNotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PredicateNot</c>
	/// labeled alternative in <see cref="NSPredicateParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicateNot([NotNull] NSPredicateParser.PredicateNotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PredicateTrue</c>
	/// labeled alternative in <see cref="NSPredicateParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicateTrue([NotNull] NSPredicateParser.PredicateTrueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PredicateTrue</c>
	/// labeled alternative in <see cref="NSPredicateParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicateTrue([NotNull] NSPredicateParser.PredicateTrueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PredicateComparison</c>
	/// labeled alternative in <see cref="NSPredicateParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicateComparison([NotNull] NSPredicateParser.PredicateComparisonContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PredicateComparison</c>
	/// labeled alternative in <see cref="NSPredicateParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicateComparison([NotNull] NSPredicateParser.PredicateComparisonContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PredicateOr</c>
	/// labeled alternative in <see cref="NSPredicateParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicateOr([NotNull] NSPredicateParser.PredicateOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PredicateOr</c>
	/// labeled alternative in <see cref="NSPredicateParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicateOr([NotNull] NSPredicateParser.PredicateOrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PredicateParens</c>
	/// labeled alternative in <see cref="NSPredicateParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicateParens([NotNull] NSPredicateParser.PredicateParensContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PredicateParens</c>
	/// labeled alternative in <see cref="NSPredicateParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicateParens([NotNull] NSPredicateParser.PredicateParensContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PredicateFalse</c>
	/// labeled alternative in <see cref="NSPredicateParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicateFalse([NotNull] NSPredicateParser.PredicateFalseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PredicateFalse</c>
	/// labeled alternative in <see cref="NSPredicateParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicateFalse([NotNull] NSPredicateParser.PredicateFalseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PredicateAnd</c>
	/// labeled alternative in <see cref="NSPredicateParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicateAnd([NotNull] NSPredicateParser.PredicateAndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PredicateAnd</c>
	/// labeled alternative in <see cref="NSPredicateParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicateAnd([NotNull] NSPredicateParser.PredicateAndContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ComparisonPredicateUnqualified</c>
	/// labeled alternative in <see cref="NSPredicateParser.comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonPredicateUnqualified([NotNull] NSPredicateParser.ComparisonPredicateUnqualifiedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ComparisonPredicateUnqualified</c>
	/// labeled alternative in <see cref="NSPredicateParser.comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonPredicateUnqualified([NotNull] NSPredicateParser.ComparisonPredicateUnqualifiedContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ComparisonPredicateAny</c>
	/// labeled alternative in <see cref="NSPredicateParser.comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonPredicateAny([NotNull] NSPredicateParser.ComparisonPredicateAnyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ComparisonPredicateAny</c>
	/// labeled alternative in <see cref="NSPredicateParser.comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonPredicateAny([NotNull] NSPredicateParser.ComparisonPredicateAnyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ComparisonPredicateSome</c>
	/// labeled alternative in <see cref="NSPredicateParser.comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonPredicateSome([NotNull] NSPredicateParser.ComparisonPredicateSomeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ComparisonPredicateSome</c>
	/// labeled alternative in <see cref="NSPredicateParser.comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonPredicateSome([NotNull] NSPredicateParser.ComparisonPredicateSomeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ComparisonPredicateAll</c>
	/// labeled alternative in <see cref="NSPredicateParser.comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonPredicateAll([NotNull] NSPredicateParser.ComparisonPredicateAllContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ComparisonPredicateAll</c>
	/// labeled alternative in <see cref="NSPredicateParser.comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonPredicateAll([NotNull] NSPredicateParser.ComparisonPredicateAllContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ComparisonPredicateNone</c>
	/// labeled alternative in <see cref="NSPredicateParser.comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonPredicateNone([NotNull] NSPredicateParser.ComparisonPredicateNoneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ComparisonPredicateNone</c>
	/// labeled alternative in <see cref="NSPredicateParser.comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonPredicateNone([NotNull] NSPredicateParser.ComparisonPredicateNoneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UnqualifiedComparisonPredicate</c>
	/// labeled alternative in <see cref="NSPredicateParser.unqualified_comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnqualifiedComparisonPredicate([NotNull] NSPredicateParser.UnqualifiedComparisonPredicateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnqualifiedComparisonPredicate</c>
	/// labeled alternative in <see cref="NSPredicateParser.unqualified_comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnqualifiedComparisonPredicate([NotNull] NSPredicateParser.UnqualifiedComparisonPredicateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OperatorBetween</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperatorBetween([NotNull] NSPredicateParser.OperatorBetweenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OperatorBetween</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperatorBetween([NotNull] NSPredicateParser.OperatorBetweenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OperatorOptions</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperatorOptions([NotNull] NSPredicateParser.OperatorOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OperatorOptions</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperatorOptions([NotNull] NSPredicateParser.OperatorOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OperatorOptionsBare</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_with_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperatorOptionsBare([NotNull] NSPredicateParser.OperatorOptionsBareContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OperatorOptionsBare</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_with_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperatorOptionsBare([NotNull] NSPredicateParser.OperatorOptionsBareContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OperatorOptionsSpecified</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_with_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperatorOptionsSpecified([NotNull] NSPredicateParser.OperatorOptionsSpecifiedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OperatorOptionsSpecified</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_with_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperatorOptionsSpecified([NotNull] NSPredicateParser.OperatorOptionsSpecifiedContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OpEqualTo</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpEqualTo([NotNull] NSPredicateParser.OpEqualToContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OpEqualTo</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpEqualTo([NotNull] NSPredicateParser.OpEqualToContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OpNotEqualTo</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpNotEqualTo([NotNull] NSPredicateParser.OpNotEqualToContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OpNotEqualTo</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpNotEqualTo([NotNull] NSPredicateParser.OpNotEqualToContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OpLessThan</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLessThan([NotNull] NSPredicateParser.OpLessThanContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OpLessThan</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLessThan([NotNull] NSPredicateParser.OpLessThanContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OpGreaterThan</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpGreaterThan([NotNull] NSPredicateParser.OpGreaterThanContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OpGreaterThan</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpGreaterThan([NotNull] NSPredicateParser.OpGreaterThanContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OpLessThanOrEqualTo</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLessThanOrEqualTo([NotNull] NSPredicateParser.OpLessThanOrEqualToContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OpLessThanOrEqualTo</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLessThanOrEqualTo([NotNull] NSPredicateParser.OpLessThanOrEqualToContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OpGreaterThanOrEqualTo</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpGreaterThanOrEqualTo([NotNull] NSPredicateParser.OpGreaterThanOrEqualToContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OpGreaterThanOrEqualTo</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpGreaterThanOrEqualTo([NotNull] NSPredicateParser.OpGreaterThanOrEqualToContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OpContains</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpContains([NotNull] NSPredicateParser.OpContainsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OpContains</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpContains([NotNull] NSPredicateParser.OpContainsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OpIn</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpIn([NotNull] NSPredicateParser.OpInContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OpIn</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpIn([NotNull] NSPredicateParser.OpInContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OpBeginsWith</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpBeginsWith([NotNull] NSPredicateParser.OpBeginsWithContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OpBeginsWith</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpBeginsWith([NotNull] NSPredicateParser.OpBeginsWithContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OpEndsWith</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpEndsWith([NotNull] NSPredicateParser.OpEndsWithContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OpEndsWith</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpEndsWith([NotNull] NSPredicateParser.OpEndsWithContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OpLike</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLike([NotNull] NSPredicateParser.OpLikeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OpLike</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLike([NotNull] NSPredicateParser.OpLikeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OpMatches</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpMatches([NotNull] NSPredicateParser.OpMatchesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OpMatches</c>
	/// labeled alternative in <see cref="NSPredicateParser.operator_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpMatches([NotNull] NSPredicateParser.OpMatchesContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprMult</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprMult([NotNull] NSPredicateParser.ExprMultContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprMult</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprMult([NotNull] NSPredicateParser.ExprMultContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprIndex</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprIndex([NotNull] NSPredicateParser.ExprIndexContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprIndex</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprIndex([NotNull] NSPredicateParser.ExprIndexContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprParens</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprParens([NotNull] NSPredicateParser.ExprParensContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprParens</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprParens([NotNull] NSPredicateParser.ExprParensContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprConstant</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprConstant([NotNull] NSPredicateParser.ExprConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprConstant</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprConstant([NotNull] NSPredicateParser.ExprConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprPower</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprPower([NotNull] NSPredicateParser.ExprPowerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprPower</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprPower([NotNull] NSPredicateParser.ExprPowerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprNoArgFunction</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprNoArgFunction([NotNull] NSPredicateParser.ExprNoArgFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprNoArgFunction</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprNoArgFunction([NotNull] NSPredicateParser.ExprNoArgFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprDiv</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprDiv([NotNull] NSPredicateParser.ExprDivContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprDiv</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprDiv([NotNull] NSPredicateParser.ExprDivContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprKeypathBinaryExpressions</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprKeypathBinaryExpressions([NotNull] NSPredicateParser.ExprKeypathBinaryExpressionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprKeypathBinaryExpressions</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprKeypathBinaryExpressions([NotNull] NSPredicateParser.ExprKeypathBinaryExpressionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprKeypathIdentifier</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprKeypathIdentifier([NotNull] NSPredicateParser.ExprKeypathIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprKeypathIdentifier</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprKeypathIdentifier([NotNull] NSPredicateParser.ExprKeypathIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprArgFunction</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprArgFunction([NotNull] NSPredicateParser.ExprArgFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprArgFunction</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprArgFunction([NotNull] NSPredicateParser.ExprArgFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprKeypathAtIdentifier</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprKeypathAtIdentifier([NotNull] NSPredicateParser.ExprKeypathAtIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprKeypathAtIdentifier</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprKeypathAtIdentifier([NotNull] NSPredicateParser.ExprKeypathAtIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprSub</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprSub([NotNull] NSPredicateParser.ExprSubContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprSub</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprSub([NotNull] NSPredicateParser.ExprSubContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprAssign</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprAssign([NotNull] NSPredicateParser.ExprAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprAssign</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprAssign([NotNull] NSPredicateParser.ExprAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprUnaryMinus</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprUnaryMinus([NotNull] NSPredicateParser.ExprUnaryMinusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprUnaryMinus</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprUnaryMinus([NotNull] NSPredicateParser.ExprUnaryMinusContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprAdd</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprAdd([NotNull] NSPredicateParser.ExprAddContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprAdd</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprAdd([NotNull] NSPredicateParser.ExprAddContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IndexExpr</c>
	/// labeled alternative in <see cref="NSPredicateParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexExpr([NotNull] NSPredicateParser.IndexExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IndexExpr</c>
	/// labeled alternative in <see cref="NSPredicateParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexExpr([NotNull] NSPredicateParser.IndexExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IndexFirst</c>
	/// labeled alternative in <see cref="NSPredicateParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexFirst([NotNull] NSPredicateParser.IndexFirstContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IndexFirst</c>
	/// labeled alternative in <see cref="NSPredicateParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexFirst([NotNull] NSPredicateParser.IndexFirstContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IndexLast</c>
	/// labeled alternative in <see cref="NSPredicateParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexLast([NotNull] NSPredicateParser.IndexLastContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IndexLast</c>
	/// labeled alternative in <see cref="NSPredicateParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexLast([NotNull] NSPredicateParser.IndexLastContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IndexSize</c>
	/// labeled alternative in <see cref="NSPredicateParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexSize([NotNull] NSPredicateParser.IndexSizeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IndexSize</c>
	/// labeled alternative in <see cref="NSPredicateParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexSize([NotNull] NSPredicateParser.IndexSizeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ValueString</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueString([NotNull] NSPredicateParser.ValueStringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ValueString</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueString([NotNull] NSPredicateParser.ValueStringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ValueNumber</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueNumber([NotNull] NSPredicateParser.ValueNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ValueNumber</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueNumber([NotNull] NSPredicateParser.ValueNumberContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ValueFormat</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueFormat([NotNull] NSPredicateParser.ValueFormatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ValueFormat</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueFormat([NotNull] NSPredicateParser.ValueFormatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ValueVariable</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueVariable([NotNull] NSPredicateParser.ValueVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ValueVariable</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueVariable([NotNull] NSPredicateParser.ValueVariableContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ValueNull</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueNull([NotNull] NSPredicateParser.ValueNullContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ValueNull</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueNull([NotNull] NSPredicateParser.ValueNullContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ValueTrue</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueTrue([NotNull] NSPredicateParser.ValueTrueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ValueTrue</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueTrue([NotNull] NSPredicateParser.ValueTrueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ValueFalse</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueFalse([NotNull] NSPredicateParser.ValueFalseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ValueFalse</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueFalse([NotNull] NSPredicateParser.ValueFalseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ValueSelf</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueSelf([NotNull] NSPredicateParser.ValueSelfContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ValueSelf</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueSelf([NotNull] NSPredicateParser.ValueSelfContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ValueEmptyAggregate</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueEmptyAggregate([NotNull] NSPredicateParser.ValueEmptyAggregateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ValueEmptyAggregate</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueEmptyAggregate([NotNull] NSPredicateParser.ValueEmptyAggregateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ValueAggregate</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueAggregate([NotNull] NSPredicateParser.ValueAggregateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ValueAggregate</c>
	/// labeled alternative in <see cref="NSPredicateParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueAggregate([NotNull] NSPredicateParser.ValueAggregateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprListAccum</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprListAccum([NotNull] NSPredicateParser.ExprListAccumContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprListAccum</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprListAccum([NotNull] NSPredicateParser.ExprListAccumContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprListSingle</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprListSingle([NotNull] NSPredicateParser.ExprListSingleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprListSingle</c>
	/// labeled alternative in <see cref="NSPredicateParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprListSingle([NotNull] NSPredicateParser.ExprListSingleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NSPredicateParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] NSPredicateParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NSPredicateParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] NSPredicateParser.VariableContext context);
}
